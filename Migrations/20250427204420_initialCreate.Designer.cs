// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workout.Data;

#nullable disable

namespace Workout.Migrations
{
    [DbContext(typeof(WorkoutContext))]
    [Migration("20250427204420_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Workout.Model.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Equipment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MuscleGroup")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Reps")
                        .HasColumnType("int");

                    b.Property<int?>("Sets")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Excercise");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Equipment = "",
                            MuscleGroup = "Chest",
                            Name = "Push Up",
                            Reps = 10,
                            Sets = 3,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Equipment = "",
                            MuscleGroup = "Hamstrings",
                            Name = "Legs",
                            Reps = 15,
                            Sets = 3,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Equipment = "",
                            MuscleGroup = "Crunch",
                            Name = "Abs",
                            Reps = 100,
                            Sets = 3,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Equipment = "",
                            MuscleGroup = "Curl",
                            Name = "Arms",
                            Reps = 10,
                            Sets = 3,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Duration = 120,
                            Equipment = "",
                            MuscleGroup = "All",
                            Name = "Speed Walking",
                            Type = 0
                        });
                });

            modelBuilder.Entity("Workout.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jackfrost@frosty.com",
                            Name = "Jack Frost"
                        },
                        new
                        {
                            Id = 2,
                            Email = "juniebjones@jones.com",
                            Name = "Junie B Jones"
                        },
                        new
                        {
                            Id = 3,
                            Email = "cookiemonster@cookie.com",
                            Name = "Cookie Monster"
                        });
                });

            modelBuilder.Entity("Workout.Model.WorkoutLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutLog");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            ExerciseId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 4, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            ExerciseId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Workout.Model.WorkoutLog", b =>
                {
                    b.HasOne("Workout.Model.Exercise", "Exercise")
                        .WithMany("WorkoutLog")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout.Model.User", "User")
                        .WithMany("WorkoutLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Workout.Model.Exercise", b =>
                {
                    b.Navigation("WorkoutLog");
                });

            modelBuilder.Entity("Workout.Model.User", b =>
                {
                    b.Navigation("WorkoutLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
